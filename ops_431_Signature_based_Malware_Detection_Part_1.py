#!/usr/bin/env python3

# Script Name:                  Ops 401d8 Challenge 31
# Author:                       David Prutch
# Date of latest revision:      08/21/2023
# Purpose:                      Prompt the user to type in a file name to search for.
                                # Prompt the user for a directory to search in.
                                # Search each file in the directory by name.
                                # TIP: You may need to perform different commands depending on what OS youâ€™re executing the script on.

                                # For each positive detection, print to the screen the file name and location.
                                # At the end of the search process, print to the screen how many files were searched and how many hits were found.

# Import Libraries
# Import required modules for the script
import os
import subprocess
from time import sleep
import platform

# Get your system
# Determine the operating system the script is running on
my_os = platform.system()

# Define Functions

# Function for searching files on Linux
def linux_search():
    # Ask the user for the file name and search directory
    filename = input("Enter the file name to search for: ")
    search_directory = input("Enter the directory to search in: ")

    # Check if the specified directory exists
    if not os.path.exists(search_directory):
        print("Error: The specified directory does not exist.")
        return

    # Initialize counters for searched files and hits
    searched_files = 0
    hits = 0

    # Traverse through the directory and its subdirectories
    for root, _, files in os.walk(search_directory):
        for file in files:
            # Check if the current file matches the desired filename
            if file == filename:
                # Print the location of the found file
                print(f"Found: {filename} at {os.path.join(root, file)}")
                hits += 1
            searched_files += 1

    # Display search summary
    print("\nSearch completed.")
    print(f"Total files searched: {searched_files}")
    print(f"Total hits found: {hits}")

# Function for searching files on Windows
def windows_search():
    # Ask the user for the file name and search directory
    filename = input("Enter the file name to search for: ")
    search_directory = input("Enter the directory to search in: ")

    # Check if the specified directory exists
    if not os.path.exists(search_directory):
        print("Error: The specified directory does not exist.")
        return

    # Build the command to search for the file using Windows dir command
    cmd = f'dir /s /b {os.path.join(search_directory, filename)}'

    try:
        # Execute the command and capture the result
        result = subprocess.check_output(cmd, shell=True, text=True)
        hit_files = result.strip().split('\n')
        if hit_files:
            # Print the locations of the found files
            for file in hit_files:
                print(f"Found: {filename} at {file}")
        else:
            print(f"{filename} not found in the specified directory.")

    except subprocess.CalledProcessError:
        print("An error occurred while searching.")

# Main
# Check the operating system and call the appropriate search function
if my_os == "Linux":
    linux_search()
elif my_os == "Windows":
    windows_search()
else:
    print("Your OS is not compatible with this script.")
